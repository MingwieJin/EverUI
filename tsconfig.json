// https://www.typescriptlang.org/docs/handbook/compiler-options.html
{
  "compilerOptions": {
    "target": "ESNext", // Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
    "useDefineForClassFields": true, // Emit ECMAScript-standard-compliant class fields.
    "lib": ["ESNext", "DOM", "DOM.Iterable"],
    "module": "ESNext",  // Specify what module code is generated.
    "skipLibCheck": true, // Skip type checking all .d.ts files.

    /* Bundler mode */
    "moduleResolution": "Node", // Specify how TypeScript looks up a file from a given module specifier.
    "allowImportingTsExtensions": true, // Allow imports to include TypeScript file extensions.
    "resolveJsonModule": true, // Enable importing .json files.
    "isolatedModules": true, // Ensure that each file can be safely transpiled without relying on other imports.
    "noEmit": true, // Disable emitting files from a compilation.
    "jsx": "react-jsx",

    /* Linting */
    "strict": true, // Enable all strict type-checking options.
    "noUnusedLocals": true, // Enable error reporting when local variables aren't read.
    "noUnusedParameters": true, // Raise an error when a function parameter isn't read.
    "noFallthroughCasesInSwitch": true, // Enable error reporting for fallthrough cases in switch statements.
    "allowSyntheticDefaultImports": true, // Allow 'import x from y' when a module doesn't have a default export.

    /* types https://cn.vitejs.dev/guide/features.html#client-types */
    "types": ["vite/client"]
  },
  "include": [
    "src",
  ],
  "exclude": ["src/stories"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
